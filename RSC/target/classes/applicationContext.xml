<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:annotation-config />
	<tx:annotation-driven />
	<mvc:annotation-driven />
	
	<!-- FTPService -->
	<bean id = "ftpService" class = "ftp.FTPService" />
	
	<!-- DB Connection을 가져오는 빈 -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@59.187.224.177:7624:xe" />
		<property name="username" value="kosta" />
		<property name="password" value="1234" />
	</bean> -->
	
 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="kosta" />
		<property name="password" value="1234" />
	</bean>

	<!-- MemberSessionFactory 설정하는 빈 -->
	<bean id="memberFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="member.xml" />
	</bean>

	<!-- MasterSessionFactory 설정하는 빈 -->
	<bean id="masterFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="master.xml" />
	</bean>

	<!-- AdminSessionFactory 설정하는 빈 -->
	<bean id="adminFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="admin.xml" />
	</bean>

	<!-- BoardSessionFactory 설정하는 빈 -->
	<bean id="boardFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="board.xml" />
	</bean>

	<!-- NoticeSessionFactory 설정하는 빈 -->
	<bean id="noticeFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="notice.xml" />
	</bean>

	<!-- GroupsSessionFactory 설정하는 빈 -->
	<bean id="groupsFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="groups.xml" />
	</bean>
	
	<!-- SingoSessionFactory 설정하는 빈 -->
	<bean id="singoFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="singo.xml" />
	</bean>
	
	<!-- ReplySessionFactory 설정하는 빈 -->
	<bean id="replyFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="reply.xml" />
	</bean>
	
	<!-- FriendSessionFactory -->
	<bean id = "friendFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="SqlMapConfig.xml" />
		<property name="mapperLocations" value="friend.xml" />
	</bean>
	
	<!-- FriendDAO -->
	<bean id = "friendDAO" class = "dao.FriendDAO">
		<property name = "sqlSessionFactory" ref = "friendFactory"/>
	</bean>

	<!-- masterDAO -->
	<bean id="masterDAO" class="dao.MasterDAO">
		<property name="sqlSessionFactory" ref="masterFactory" />
	</bean>

	<!-- adminDAO -->
	<bean id="adminDAO" class="dao.AdminDAO">
		<property name="sqlSessionFactory" ref="adminFactory" />
	</bean>

	<!-- memberDAO -->
	<bean id="memberDAO" class="dao.MemberDAO">
		<property name="sqlSessionFactory" ref="memberFactory" />
	</bean>

	<!-- boardDAO -->
	<bean id="boardDAO" class="dao.BoardDAO">
		<property name="sqlSessionFactory" ref="boardFactory" />
	</bean>

	<!-- noticeDAO -->
	<bean id="noticeDAO" class="dao.NoticeDAO">
		<property name="sqlSessionFactory" ref="noticeFactory" />
	</bean>
	
	<!-- groupsDAO -->
	<bean id="groupsDAO" class="dao.GroupsDAO">
		<property name="sqlSessionFactory" ref="groupsFactory" />
	</bean>
	
	<!-- SingoDAO -->
	<bean id="singoDAO" class="dao.SingoDAO">
		<property name="sqlSessionFactory" ref="singoFactory"/>
	</bean>
	
	<!-- replyDAO -->
	<bean id = "replyDAO" class = "dao.ReplyDAO">
		<property name = "sqlSessionFactory" ref = "replyFactory"/>
	</bean>

	<!-- memberService -->
	<bean id="memberService" class="service.MemberService">
		<property name="memberDAO" ref="memberDAO" />
		<property name="adminDAO" ref="adminDAO" />
		<property name = "FTPService" ref = "ftpService"/>
	</bean>

	<!-- boardService -->
	<bean id="boardService" class="service.BoardService">
		<property name="boardDAO" ref="boardDAO" />
		<property name = "FTPService" ref = "ftpService"/>
	</bean>

	<!-- noticeService -->
	<bean id="noticeService" class="service.NoticeService">
		<property name="noticeDAO" ref="noticeDAO" />
	</bean>
	
	<!-- groupsService -->
	<bean id="groupsService" class="service.GroupsService">
		<property name="groupsDAO" ref="groupsDAO" />
	</bean>
		
	<!-- SingoService -->
	<bean id="singoService" class="service.SingoService">
		<property name="singoDAO" ref="singoDAO"/>
	</bean>

	<!-- replyService -->
	<bean id="replyService" class="service.ReplyService">
		<property name = "replyDAO" ref = "replyDAO"/>
	</bean>

	<!-- FriendService -->
	<bean id = "friendService" class = "service.FriendService">
		<property name = "FriendDAO" ref = "friendDAO"/>
		<property name = "FTPService" ref = "ftpService"/>
	</bean>

	<!-- 트랜잭션 매니저 빈 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>

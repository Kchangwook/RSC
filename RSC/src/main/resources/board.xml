<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	
	<resultMap id="boardResult" type="board">
		<result property="groupNum" column="GROUP_NUM" />
		<result property="boardNum" column="BOARD_NUM" />
		<result property="memberId" column = "MEMBER_ID"/>
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardFile" column="BOARD_FILE" />
		<result property="boardTime" column="BOARD_TIME" />
		<result property="boardSingoFlag" column="BOARD_SINGO_FLAG" />
		<result property="boardLike" column="BOARD_LIKE" />
		<result property="boardCnt" column="BOARD_CNT" />
		<result property="memberImg" column="MEMBER_IMG"/>
	</resultMap>

	<!-- board 테이블 내의 모든 데이터를 가져오기 -->
	<select id="selectAllboard" resultMap="boardResult">
		select * from board
	</select>
	
	<!-- 아이디를 통한 게시글 검색 & 시간순 정렬(Nick으로 반환) -->
	<select id="selectBoardByIdDesc" parameterType="String" resultMap="boardResult">
		select b.board_num, m.member_id, m.member_nick, b.board_content, b.board_file, b.board_time, b.board_singo_flag, b.board_like, b.board_cnt
		from member m, board b
		where m.member_id = b.member_id and m.member_id=#{memberId} order by b.board_time desc
	</select>
	
	<!-- 번호로 게시글 검색 -->
	<select id="selectBoardByNum" parameterType="int" resultMap="boardResult">
		select b.board_num, m.member_id, m.member_nick, b.board_content, b.board_file, b.board_time, b.board_singo_flag, b.board_like, b.board_cnt
		from member m, board b
		where m.member_id = b.member_id and b.board_num = #{boardNum}
	</select>
	
	<!-- 게시글 추가 -->
	<insert id="addBoard" parameterType="board">
		insert 
		into board(group_num, board_num, member_id, board_content, board_time, 
					board_singo_flag, board_like, board_cnt)
		VALUES(0, board_SEQ.NEXTVAL, #{memberId}, #{boardContent}, SYSTIMESTAMP, 0, 0, 0)
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="board" >
		update board
		set board_content = #{boardContent}, board_time = SYSTIMESTAMP
		where member_id = #{memberId} and board_num = #{boardNum}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="board">
		delete 
		from board 
		where member_id = #{memberId} and board_num = #{boardNum}
	</delete>
	
	<!-- 시간 순서대로 게시글 가져오기 -->
	<select id = "selectOrderByTime" resultMap = "boardResult">
		select b.board_num, m.member_id, m.member_img, m.member_nick, b.board_content, b.board_file, b.board_time, b.board_singo_flag, b.board_like, b.board_cnt
		from board b,Member m 
		where b.member_id = m.member_id order by board_cnt desc
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="addReadNum" parameterType="int">
		update board
		set board_cnt = board_cnt + 1
		where board_num = #{boardNum}
	</update>
	
	<select id = "selectForAll" parameterType="String" resultMap="boardResult">
		select b.board_num, m.member_id, m.member_nick, b.board_content, b.board_file, b.board_time, b.board_singo_flag, b.board_like, b.board_cnt
		from member m, board b
		where m.member_id = b.member_id and m.member_id=#{memberId} and group_num = 0 order by b.board_time desc
	</select>
	
	<!-- 모든 게시글 오름차순/내림차순 정렬로 가져오기 (관리자) -->
	<select id="selectAllOrder" parameterType="map" resultMap="boardResult">
		select * from board
		where member_id like '%'||#{boardIdContent}||'%' or
			  board_content like '%'||#{boardIdContent}||'%'
		order by ${orderColumn} ${orderType} 
	</select>
	
	

</mapper>

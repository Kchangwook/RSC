<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<resultMap id="memberResult" type="member">
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="memberImg" column="MEMBER_IMG" />
		<result property="memberInterest" column="MEMBER_INTEREST" />
		<result property="memberInfoOpen" column="MEMBER_INFO_OPEN" />
		<result property="memberLogin" column="MEMBER_LOGIN_TIME" />
		<result property="memberLogout" column="MEMBER_LOGOUT_TIME" />
		<result property="memberPresentLogin" column="MEMBER_PRESENT_LOGIN" />
	</resultMap>

	<!-- member 테이블 내의 모든 데이터를 가져오기 -->
	<select id="selectAll" resultMap="memberResult">
	select * from member
	</select>
	
	<!-- 아이디를 통한 member 검색 -->
	<select id = "selectById" parameterType = "String" resultMap = "memberResult">
	select * from member where member_id = #{memberId}
	</select>
	
	<!-- 회원가입 member 데이터 삽입 -->
	<insert id="add" parameterType = "member">
	insert into member(member_id, member_pw, member_nick,member_img, member_interest, member_info_open, member_present_login) values(#{memberId},#{memberPw},#{memberNick},#{memberImg},#{memberInterest},#{memberInfoOpen},0)
	</insert>
	
	<!-- member 테이블 내의 모든 데이터 삭제 -->
	<delete id="deleteAll">
	delete from member
	</delete>
	
	<!-- member 테이블 내의 데이터 수 가져오기 -->
	<select id = "getCount" resultType = "int">
	select count(*) from member
	</select>
	
	<!-- 닉네임으로 데이터 가져오기 -->
	<select id = "selectByNick" parameterType = "String" resultMap = "memberResult">
	select * from member where member_nick = #{memberNick}
	</select>
	
	<!-- member테이블의 login시간과 로그인 여부를 업데이트 -->
	<update id = "updateLoginInfo" parameterType = "String">
	update member set member_present_login = 1, member_login_time = SYSTIMESTAMP
	where member_id = #{memberId}
	</update>
	
	<!-- id 또는 닉네임으로 검색하여 데이터 가져오기 -->
	<select id="selectByIdName" parameterType="String" resultMap="memberResult">
		select * from member where member_id like '%'||#{memberId}||'%' or member_nick like '%'||#{memberNick}||'%'
	</select>

	<!-- 해당하는 id의 닉네임 가져오기 -->
	<select id = "selectNick" parameterType = "String" resultType="String">
	select member_nick from member where member_id = #{memberId}
	</select>
	
	<!-- 일부 닉네임으로 데이터 가져오기 -->
	<select id = "selectByPartOfMemberNick" parameterType = "String" resultMap = "memberResult">
	select * from member where member_nick like '%'||#{memberNick}||'%' And member_info_open=1
	</select>
	
	<delete id="deleteById" parameterType="String">
		delete from member where member_id=#{memberId}
	</delete>
	
	<!-- 로그아웃 정보를 수정 -->
	<update id = "updateLogout" parameterType = "String">
		update member set member_logout_time = SYSTIMESTAMP, member_present_login = 0 where member_id = #{memberId}
	</update>
	
	<!-- mypage에서 member테이블 업데이트 -->
	<update id = "updateMypageInfo" parameterType = "member">
	update member set member_pw = #{memberPw}, member_nick = #{memberNick}, member_img = #{memberImg}, member_interest = #{memberInterest}, member_info_open = #{memberInfoOpen}
	where member_id = #{memberId}
	</update>
	
	<select id = "searchPresentLogin" resultMap = "memberResult">
		select distinct m.member_id,m.member_nick,m.member_img
		from member m,friend f
		where f.member_id = #{memberId} and m.member_id = f.friend_id and m.member_present_login = 1
	</select>
		
	<!-- chatNum으로 채팅방 member list 가져오기 -->
	<select id="selectChatMemberByChatNum" parameterType="int" resultMap="memberResult">
		select m.member_id, m.member_nick, m.member_img, m.member_login_time, m.member_logout_time, m.member_present_login
		from member m, chat c
		where c.chat_num=#{chatNum} and c.member_id=m.member_id
	</select>
	
	<!-- 전체 친구의 회원정보 가져오기 -->
	<select id="selectFriendMemberById" parameterType="String" resultMap="memberResult">
		select m.member_id, m.member_nick, m.member_img, m.member_login_time, m.member_logout_time, m.member_present_login
		from member m,friend f
		where f.member_id = #{memberId} and m.member_id = f.friend_id
		order by m.member_present_login desc
	</select>
		

</mapper>
